Rangkuman Membangun Web Service Menggunakan Node.js

Membuat HTTP Server secara Native
    >   Node.js menyediakan core modules http untuk membangun web server

    >   HTTP module memiliki banyak member seperti objek, properti, atau method yang berguna untuk melakukan hal-hal terkait protokol HTTP. 
        Salah satu member yang penting untuk kita ketahui sekarang adalah method http.createServer()

    >   Method ini berfungsi untuk membuat HTTP server yang merupakan instance dari http.server.
        Method ini menerima satu parameter custom callback yang digunakan sebagai request listener

    >   Request listener memiliki 2 parameter
        yakni request dan response. Request merupakan objek yang menyimpan informasi terkait permintaan yang dikirimkan oleh client
        response merupakan objek yang digunakan untuk menanggapi permintaan
    
    >   Method listen() dapat menerima 4 parameter, berikut detailnya
        ->  port (number): jalur yang digunakan untuk mengakses HTTP server
        ->  hostname (string): nama domain yang digunakan oleh HTTP server
        ->  backlog (number): maksimal koneksi yang dapat ditunda (pending) pada HTTP server
        ->  listeningListener (function): callback yang akan terpanggil ketika HTTP server sedang bekerja (listening)
    
Web Framework
    >   Web Framework adalah sebuah kerangka yang dapat membantu mempermudah pengembangan web, termasuk dalam membuat web server
        Dengan menggunakan framework, penulisan kode akan lebih terstruktur, mudah dipelihara, dan gampang dikembangkan
    
Web Framework di Node.js
    >   Framework seperti Hapi menyediakan environment yang lengkap untuk mengembangkan web server yang kompleks
        Bila menggunakan Hapi, kita tak perlu tools lain untuk menerapkan layer authentication, tokenize, cors, dan lain sebagainya

Membuat HTTP Server Menggunakan Hapi
    >   Kita akan membuat server melalui modul pihak ketiga @hapi/hapi
        Untuk menggunakan modul tersebut, kita perlu memasang terlebih dahulu melalui NPM
    
    >   HTTP server sendiri dibuat melalui method Hapi.server(). Method ini menerima satu parameter, yakni ServerOptions
        ServerOptions merupakan objek yang menampung konfigurasi dari server yang hendak dibuat, salah satunya kita bisa menetapkan properti port dan host

    >   Proses menjalankan server (server.start()) dilakukan secara asynchronous
    >   Setelah server berhasil berjalan, Anda bisa melihat alamat lengkap dan port di mana server dijalankan melalui properti server.info.uri

ESLint
    >   ESLint adalah tools yang dapat membantu atau membimbing Anda untuk selalu menuliskan kode JavaScript dengan gaya yang konsisten

    >   ESLint dapat mengevaluasi kode yang dituliskan berdasarkan aturan yang Anda terapkan

Same-Origin Policy
    >   Ketika server menampung website, mungkin beberapa data gambar, video, stylesheet biasanya diambil dari alamat server lain atau origin yang berbeda

    >   Namun, apakah Anda tahu bahwa tidak semua data bisa diambil dari origin yang berbeda? Contohnya, data JSON yang didapatkan melalui teknik XMLHTTPRequest atau fetch

    >   Lantas, apa solusi agar keduanya dapat berinteraksi? Tenang, untungnya ada mekanisme yang dapat membuat mereka saling berinteraksi. Mekanisme tersebut disebut Cross-Origin Resource Sharing (CORS)